GIT Homework 1

To complete the task, you must have Git Bash installed for Windows.
Created a GitHub account

Perform all the steps of the script in the Flatbush Terminal, Terminal, in the folder under the git.

How to send HW for verification.
1. Create a text file as in the first HW by Terminal.
2. Transfer the script to this file.
3. Next to each action - write a command in GitBash

Send the script file and the link to your git hub to the mentors for verification.

JSON
 4. create an external repository as "JSON".
created new repository "JSON"

 5. Clone repository JSON on local PC.
git clone git@github.com:baha***/JSON.git

 6. Inside local JSON create file “new.json”.
cd JSON/
touch new.json

 7. Add file to git.
git add new.json

 8. Commit file.
 git commit -m "adding json_file"

 9. Send file to external repository GitHub.
git push

 10. Edit file “new.json” - write information about yourself by format JSON.
vim new.json
touch button "i"(insert) and write next:
{
	"full_name": "Kirgeyev Bakhtiyar",
	"age": 30,
	"pets": 0,
	"wiling_salary": "10000$ per mounth"
}
touch button "esc" then write following:
:wq

 11. Send changes to an external repository.
git commit -am "filling file"
git push

 12. Create file preferences.json
touch preferences.json

 13. write information about favorites in preferences.json by format JSON.
vim preferences.json
touch button "i"(insert) and write next:
{
	"movie": "1+1",
	"serial": "peaky blinders",
	"food": "besparmak",
	"season": "spring",
	"country": "Japan"
}
touch button "esc" then write following:
:wq

 14. Create file sklls.json 
touch skills.json
touch button "i"(insert) and write next:
{
	"first": "linux",
	"second": "git",
	"third": "postman",
	"fourth": "charles",
	"fifth": "js"
}
touch button "esc" then write following:
:wq

 15. Send 2 files to an external repository at once.
git add preferences.json skills.json
git commit -m "adding preference and skills"
git push

 16. On GitHub create file bug_report.json.
add file => create file as "bug_report.json"

 17. Commit changes on GitHub.
click button "commit changes"

 18. Modify bug_report.json on the web interface.
edit file

 19. Commit changes.
click button "commit changes"

 20. Synchronize external and local JSON repository
git pull

XML
 21. create an external repository as "XML".
 create repository XML

 22. Clonr repository XML to the local PC.
cd ..
git clone git@github.com:baha***/XML.git

 23. In the local XML create file “new.xml”.
cd XML/
touch new.xml

 24. add file.
git add new.xml

 25. coomit file.
git commit -m "adding new xml file"

 26. Send to the external repository GitHub.
git push

 27. Edit file “new.xml” - write information about yourself by format XML.
vim new.xml
touch button "i"(insert) and write next:
<information>
	<fullname>Bakhtiyar Kirgeyev</fullname>
	<age>31</age>
	<pets>0</pets>
	<salary>10000</salary>
</information>
touch button "esc" then write following:
:wq

 28. Send changes to external repository.
git commit -am "update"
git psuh

 29. Create file preferences.xml
touch preferences.xml

 30. Add information about your preferences in file preferences.xml.
vim preferences.xml
touch button "i"(insert) and write next:
<information>
	<movie>1+1</movie>
	<serial>peaky blinders</serial>
	<food>besparmak</food>
	<season>spring</season>
	<country>Japan</country>
</information>
touch button "esc" then write following:
:wq

 31. Create file sklls.xml and add information in XML format
touch skills.xml
vim skills.xml
touch button "i"(insert) and write next:
<information>
	<first>linux</first>
	<second>git</second>
	<third>postman</third>
	<fourth>charles</fourth>
</information>
touch button "esc" then write following:
:wq

 32. Make an commit with one row. (possible with "-ma")
 git add preferences.xml skills.xml && git commit -m "adding prefences and skills"

 33. Send 2 files to the repository.
git push

 34. Create new file bug_report.xml on external repository.
create new file "bug_report.xml"

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click "commit changes"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
edit file

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click "commit changes"

 38. Synchronize local and external repository XML
git pull
